from telebot import TeleBot
from telegraph import Telegraph
import mongoengine as me
from pymongo.ssl_support import CERT_NONE
from datetime import datetime, timezone, date

import string
import random

from src.data.user import Team


from .quiz import Question, Quiz
from ..data import hackathon as hack_db


class Data:

    TEST_PHOTO = "https://i.ibb.co/0Gv4JyW/photo-2021-04-16-12-48-15.jpg"

    def __init__(self, conn_string: str, bot: TeleBot):
        self.bot = bot

        me.connect(host=conn_string, ssl_cert_reqs=CERT_NONE)
        print("connection success ")

        self.create_system_tables()

        self.hackathon: hack_db.Hackathon = self.get_hackathon()

    @property
    def start_quiz(self) -> Quiz:
        return Quiz.objects.filter(name="StartQuiz").first()

    @property
    def register_team_quiz(self) -> Quiz:
        return Quiz.objects.filter(name="RegisterTeamQuiz").first()

    @property
    def login_team_quiz(self) -> Quiz:
        return Quiz.objects.filter(name="LoginTeamQuiz").first()

    @property
    def cv_request_quiz(self) -> Quiz:
        return Quiz.objects.filter(name="CvQuiz").first()

    @property
    def org_questions_quiz(self) -> Quiz:
        return Quiz.objects.filter(name="OrqQuestionsQuiz").first()

    @property
    def admin_team(self) -> Team:
        return Team.objects.filter(name="Admins").first()

    def create_system_tables(self):
        self._create_quizes()

        self._create_hackathon()

    def _create_quizes(self):
        if self.start_quiz is None:
            self._create_start_quiz()

        if self.register_team_quiz is None:
            self._create_register_team_quiz()

        if self.login_team_quiz is None:
            self._create_login_team_quiz()

        if self.cv_request_quiz is None:
            self._create_cv_request_quiz()

        if self.org_questions_quiz is None:
            self._create_org_questions_quiz()

    def _create_start_quiz(self):

        quiz = Quiz(name="StartQuiz", is_required=True)

        q_name_surname = Question(
            name="name_surname",
            message="–Ø–∫ –º–µ–Ω—ñ –¥–æ —Ç–µ–±–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è?",
            correct_answer_message="–ì–∞—Ä–Ω–æ –∑–≤—É—á–∏—Ç—å ü•∞",
            wrong_answer_message="–í–≤–µ–¥–∏ —ñ–º‚Äô—è —Ç–µ–∫—Å—Ç–æ–º ü§°",
        )

        q_age = Question(
            name="age",
            message="–°–∫—ñ–ª—å–∫–∏ —Ç–æ–±—ñ —Ä–æ–∫—ñ–≤?",
            regex="[1-9][0-9]",
            correct_answer_message="–û–≥–æ, –º–∏ –æ–¥–Ω–æ–ª—ñ—Ç–∫–∏ ü•∞",
            wrong_answer_message="–í–∫–∞–∂–∏ —Å–≤—ñ–π —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –≤—ñ–∫ ü§°",
        )

        q_school = Question(
            name="school",
            message="–î–µ –≤—á–∏—à—Å—è? –í–∏–±–µ—Ä–∏ –∞–±–æ –≤–≤–µ–¥–∏.",
            buttons=[
                "–ù–£–õ–ü",
                "–õ–ù–£",
                "–£–ö–£",
                "–ö–ü–Ü",
                "–ö–ù–£",
                "–©–µ –≤ —à–∫–æ–ª—ñ",
                "–í–∂–µ –∑–∞–∫—ñ–Ω—á–∏–≤(-–ª–∞)",
            ],
            correct_answer_message="–ö–ª–∞—Å ü•∞",
            wrong_answer_message="–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–µ–∫—Å—Ç–æ–º ü§°",
        )

        q_study_term = Question(
            name="study_term",
            message="–Ø–∫–∏–π —Ç–∏ –∫—É—Ä—Å?",
            buttons=[
                "–ü–µ—Ä—à–∏–π",
                "–î—Ä—É–≥–∏–π",
                "–¢—Ä–µ—Ç—ñ–π",
                "–ß–µ—Ç–≤–µ—Ä—Ç–∏–π",
                "–ù–∞ –º–∞–≥—ñ—Å—Ç–∞—Ä—Ç—É—Ä—ñ",
                "–ù—ñ—á–æ–≥–æ –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–æ–≥–æ",
            ],
            allow_user_input=False,
            correct_answer_message="–Ü–¥–µ–∞–ª—å–Ω–∏–π —á–∞—Å, —â–æ–± –±—É–¥—É–≤–∞—Ç–∏ –∫–∞—Ä'—î—Ä—É ü•∞",
            wrong_answer_message="–í–∏–±–µ—Ä–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–¥–∏–Ω –∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ ü§°",
        )

        q_tech = Question(
            name="tech_used",
            message="–Ø–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –∑–±–∏—Ä–∞—î—à—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ñ?",
            allow_user_input=True,
            correct_answer_message="–¢–µ —â–æ —Ç—Ä–µ–±–∞!",
            wrong_answer_message="–í—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—Ä–µ–±–∞ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º",
        )
        q_source = Question(
            name="registration_source",
            message="–ó–≤—ñ–¥–∫–∏ –¥—ñ–∑–Ω–∞–≤—Å—è –ø—Ä–æ Hackathon?",
            allow_user_input=True,
            correct_answer_message="–î—è–∫—É—é –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –¥–ª—è –º–µ–Ω–µ —Ü–µ –¥—É–∂–µ –∫–æ—Ä–∏—Å—Ç–Ω–æ)",
            wrong_answer_message="–í—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—Ä–µ–±–∞ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º",
        )
        q_work = Question(
            name="work_info",
            message="–í–∂–µ –ø—Ä–∞—Ü—é—î—à –≤ –∞–π—Ç—ñ —Å—Ñ–µ—Ä—ñ?",
            buttons=[
                "Ta–∫",
                "–ù—ñ",
                "–ü–ª–∞–Ω—É—é",
            ],
            allow_user_input=False,
            correct_answer_message="–î—è–∫—É—é –∑–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é)",
            wrong_answer_message="–í—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—Ä–µ–±–∞ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º",
        )

        ##############
        q_city = Question(
            name="city",
            message="–ó–≤—ñ–¥–∫–∏ —Ç–∏? –í–∏–±–µ—Ä–∏ –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤—É.",
            buttons=["–õ—å–≤—ñ–≤", "–ö–∏—ó–≤", "–ù–æ–≤–æ—è–≤–æ—Ä—ñ–≤—Å—å–∫", "–î–æ–Ω–µ—Ü—å–∫", "–°—Ç–∞–º–±—É–ª"],
            correct_answer_message="–ë—É–≤-–±—É–≤ —Ç–∞–º!",
            wrong_answer_message="–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–µ–∫—Å—Ç–æ–º :)",
        )

        q_contact = Question(
            name="contact",
            message="–û–±–º—ñ–Ω—è—î–º–æ—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏?",
            buttons=["–¢—Ä–∏–º–∞–π!"],
            input_type="contact",
            correct_answer_message="–î—è–∫—É—é. –ê —è –∑–∞–ª–∏—à–∞—é —Ç–æ–±—ñ –∫–æ–Ω—Ç–∞–∫—Ç –≥–æ–ª–æ–≤–Ω–æ–≥–æ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞: @Slavkoooo ü•∞",
            wrong_answer_message="–ù–∞–¥—ñ—à–ª–∏, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–≤—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç ü§°",
        )

        q_email = Question(
            name="email",
            message="–ù–∞–æ—Å—Ç–∞–Ω–æ–∫, –≤–∫–∞–∂–∏ –∞–¥—Ä–µ—Å—É —Å–≤–æ—î—ó –ø–æ—à—Ç–æ–≤–æ—ó —Å–∫—Ä–∏–Ω—å–∫–∏.",
            regex="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$",
            correct_answer_message="–î—è–∫—É—é ü•∞",
            wrong_answer_message="–í–≤–µ–¥–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –∞–¥—Ä–µ—Å—É ü§°",
        )

        q_agree = Question(
            name="user_agreements",
            message="–ó–∞–ª–∏—à–∏–ª–æ—Å—è —Ç—ñ–ª—å–∫–∏ –¥–∞—Ç–∏ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö.",
            buttons=["–Ø –ø–æ–≥–æ–¥–∂—É—é—Å—å."],
            allow_user_input=False,
        )

        quiz.questions = [
            q_name_surname,
            q_age,
            q_school,
            q_study_term,
            # q_city,
            q_tech,
            q_source,
            q_work,
            q_contact,
            q_email,
            q_agree,
        ]

        quiz.save()
        print("StartQuiz has been added")

    def _create_register_team_quiz(self):
        quiz = Quiz(name="RegisterTeamQuiz", is_required=False)

        q_team_name = Question(
            name="team_name",
            message="–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ –Ω–∞–∑–≤—É —Å–≤–æ—î—ó –∫–æ–º–∞–Ω–¥–∏",
            correct_answer_message="It is fucking amazing!",
            wrong_answer_message="–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–µ–∫—Å—Ç–æ–º ü§°",
        )

        q_password = Question(
            name="password",
            message="–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥—É –≤ —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É",
            correct_answer_message="It is fucking amazing!",
            wrong_answer_message="–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å —Ç–µ–∫—Å—Ç–æ–º ü§°",
        )

        quiz.questions = [q_team_name, q_password]
        quiz.save()

        print("RegisterTeamQuiz has been added")

    def _create_login_team_quiz(self):
        quiz = Quiz(name="LoginTeamQuiz", is_required=False)

        q_login = Question(
            name="login",
            message="–í–≤–µ–¥–∏ –ª–æ–≥—ñ–Ω",
            correct_answer_message="It is fucking amazing!",
            wrong_answer_message="–¢–∞–∫–∏–π –ª–æ–≥—ñ–Ω –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —É —Å–∏—Å—Ç–µ–º—ñ.",
        )

        q_password = Question(
            name="password",
            message="–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å",
            correct_answer_message="It is fucking amazing!",
            wrong_answer_message="–ü–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑",
        )

        quiz.questions = [q_login, q_password]
        quiz.save()

        print("LoginTeamQuiz has been added")

    def _create_cv_request_quiz(self):
        quiz = Quiz(name="CvQuiz", is_required=False)

        q_file_request = Question(
            name="file_request",
            message="–ù–∞–¥—ñ—à–ª–∏ —Å–≤–æ—î —Ä–µ–∑—é–º–µ —Ñ–∞–π–ª–æ–º.",
            input_type="document",
            allow_user_input=True,
            correct_answer_message="It is fucking amazing!",
            wrong_answer_message="–Ø –æ—á—ñ–∫—É–≤–∞–≤ –≤—ñ–¥ —Ç–µ–±–µ —Ñ–∞–π–ª, –∞ —Ç–∏...",
        )

        quiz.questions = [q_file_request]
        quiz.save()

        print("CvQuiz has been added")

    def _create_org_questions_quiz(self):
        quiz = Quiz(name="OrqQuestionsQuiz", is_required=False)

        q_tshirt_size = Question(
            name="tshirt_size",
            message="–Ø–∫–∏–π —É —Ç–µ–±–µ —Ä–æ–∑–º—ñ—Ä —Ñ—É—Ç–±–æ–ª–∫–∏?",
            input_type="text",
            correct_answer_message="–í –º–µ–Ω–µ —Ç–∞–∫–æ–∂üî•",
            wrong_answer_message="ERROR: –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —â–æ—Å—å –∑ —Ü—å–æ–≥–æ S, M, L, XL, XXL, XXXLüëæ",
        )

        q_np_number = Question(
            name="new_post_number",
            message="–ó —è–∫–æ–≥–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ø–æ—à—Ç–∏ —Ç–æ–±—ñ –∑—Ä—É—á–Ω–æ –∑–∞–±—Ä–∞—Ç–∏ –ø–æ—Å–∏–ª–∫—É?",
            input_type="text",
            correct_answer_message="–°—É–ø–µ—Äüî•",
            wrong_answer_message="ERROR: –ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—èüëæ",
        )

        q_pib = Question(
            name="pib",
            message="–ü–Ü–ë",
            input_type="text",
            correct_answer_message="–î—è–∫—É—éüíö",
            wrong_answer_message="ERROR: –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —Ç–µ–∫—Å—Ç–æ–ºüëæ",
        )

        q_is_discord = Question(
            name="discord",
            message="–ú–∞—î—à –∞–∫–∫–∞—É–Ω—Ç –≤ Discord?\n–Ø–∫—â–æ –Ω—ñ, —Ç–æ–¥—ñ —Å—Ç–≤–æ—Ä–∏ –π–æ–≥–æüî•\nhttps://discord.com/",
            input_type="text",
            buttons=["–¢–∞–∫", "–ù—ñ"],
            allow_user_input=False,
            correct_answer_message="–°—É–ø–µ—Äüî•",
            wrong_answer_message="ERROR: –í–∏–±–µ—Ä–∏ –æ–¥–∏–Ω –∑ –ø–æ–¥–∞–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤üëæ",
        )

        q_comments = Question(
            name="comments",
            message="–ú–∞—î—à —è–∫—ñ—Å—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ?",
            input_type="text",
            correct_answer_message="–°—É–ø–µ—Äüî•",
            wrong_answer_message="ERROR: –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —Ç–µ–∫—Å—Ç–æ–ºüëæ",
        )

        q_city = Question(
            name="city",
            message="–ú—ñ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è",
            input_type="text",
            correct_answer_message="–ö—Ä—É—Ç–æüî•",
            wrong_answer_message="ERROR: –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ —Ç–µ–∫—Å—Ç–æ–ºüëæ",
        )

        q_is_cv = Question(
            name="is_cv",
            message="–ù–∞–¥—ñ—Å–ª–∞–≤ CV?\n–Ø–∫—â–æ –Ω—ñ, —Ç–æ–¥—ñ –ø–æ—Å–ø—ñ—à–∏, –∞–¥–∂–µ —á–∞—Å—É –Ω–µ —Ç–∞–∫ –±–∞–≥–∞—Ç–æüî•",
            input_type="text",
            buttons=["–¢–∞–∫", "–ù—ñ"],
            allow_user_input=False,
            correct_answer_message="–°—É–ø–µ—Äüî•",
            wrong_answer_message="ERROR: –í–∏–±–µ—Ä–∏ –æ–¥–∏–Ω –∑ –ø–æ–¥–∞–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤üëæ",
        )

        q_final = Question(
            name="data_processing",
            message="–ó–∞–ª–∏—à–∏–ª–æ—Å—è —Ç—ñ–ª—å–∫–∏ –¥–∞—Ç–∏ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö.",
            input_type="text",
            buttons=["–î–∞—é –¥–æ–∑–≤—ñ–ª"],
            allow_user_input=False,
            correct_answer_message="–°—É–ø–µ—Äüî•",
            wrong_answer_message="ERROR: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Çüëæ",
        )

        quiz.questions = [
            q_tshirt_size,
            q_np_number,
            q_pib,
            q_is_discord,
            q_comments,
            q_city,
            q_is_cv,
            q_final,
        ]
        quiz.save()

        print("OrqQuestionsQuiz has been added")

    def _create_hackathon(self):

        if hack_db.Hackathon.objects.first():
            print("Hack table is already exists")
            return

        hack_db.add_test_data()

    def update_quiz_table(self):
        quizes = Quiz.objects

        # form paragraphs in questions
        for quiz in quizes:
            for question in quiz.questions:
                question.message = question.message.replace("\\n", "\n")

            quiz.save()

    def get_hackathon(self) -> hack_db.Hackathon:
        return hack_db.Hackathon.objects.first()


class Content(me.Document):
    start_text = me.StringField()
    start_photo = me.StringField()
    user_start_text = me.StringField()
    user_start_photo = me.StringField()
    hack_start_text = me.StringField()
    hack_start_photo = me.StringField()
